@using PortfolioEye.Client.Components.Shared
@using PortfolioEye.Client.Extensions
@using PortfolioEye.Client.Services
@inherits LayoutComponentBase

<MudThemeProvider Theme="currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
	<MudAppBar Elevation="1">
		<MudText Typo="Typo.h5" Class="ml-3">PortfolioEye</MudText>
		<MudSpacer />
		<AuthorizeView>
			<Authorized>
				<MudMenu Dense="true" Class="mt-1 ml-4">
					<ActivatorContent>
						<MudAvatar Color="Color.Secondary">
							@context.User.Identity?.GetInitials()
						</MudAvatar>
					</ActivatorContent>
					<ChildContent>
						<PersonCard Class="mt-n2" />
						<MudDivider Class="mb-2" />
						<MudListItem Text="Account" Icon="@Icons.Material.Outlined.Person" OnClick="@(() => NavigationManager.NavigateTo("Profile"))" />
						<MudListItem Text="Logout" Icon="@Icons.Material.Outlined.Logout" OnClick="@(() => NavigateWithReload("Account/Logout"))" />
					</ChildContent>
				</MudMenu>
			</Authorized>
			<NotAuthorized>
				<MudMenu Dense="true" Class="mt-1 ml-4">
					<ActivatorContent>
						<MudAvatar Color="Color.Secondary">
							<MudIcon Icon="@Icons.Material.Filled.Person"/>
						</MudAvatar>
					</ActivatorContent>
					<ChildContent>
						<PersonCard Class="mt-n2" />
						<MudDivider Class="mb-2" />
						<MudListItem Text="Zarejestruj konto" Icon="@Icons.Material.Outlined.PersonAdd" OnClick="@(() => NavigateWithReload("Account/Register"))" />
						<MudListItem Text="Zaloguj się" Icon="@Icons.Material.Outlined.Login" OnClick="@(() => NavigateWithReload("Account/Login"))" />
					</ChildContent>
				</MudMenu>
			</NotAuthorized>
		</AuthorizeView>
		
	</MudAppBar>
	<MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
		<NavMenu />
	</MudDrawer>
	<MudMainContent>
		<MudToolBar DisableGutters="true">
			<MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" OnClick="@((e) => DrawerToggle())" Class="ml-3" />
			<MudBreadcrumbs Items="_items"></MudBreadcrumbs>
		</MudToolBar>
		<MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
			@Body
		</MudContainer>
	</MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
	An unhandled error has occurred.
	<a href="" class="reload">Reload</a>
	<a class="dismiss">🗙</a>
</div>

@code {
	private bool _drawerOpen = true;
	// private string currentUrl;
	private void DrawerToggle()
	{
		_drawerOpen = !_drawerOpen;
	}

	protected override void OnInitialized()
	{
		// currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
		NavigationManager.LocationChanged += OnLocationChanged;
		_items = BreadcrumbService.GetBreadcrumbs();
	}
	private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
	{
		// currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
		_items = BreadcrumbService.GetBreadcrumbs();
		StateHasChanged();
	}

	private List<BreadcrumbItem> _items = new List<BreadcrumbItem>() { new BreadcrumbItem("Home", href: "#") };

	private MudTheme currentTheme = new PortfolioEyeTheme();

	[Inject]
	protected NavigationManager NavigationManager { get; set; }

	[Inject]
	protected BreadcrumbService BreadcrumbService { get; set; }

	private void NavigateWithReload(string url) => NavigationManager.NavigateTo(url, true);
}